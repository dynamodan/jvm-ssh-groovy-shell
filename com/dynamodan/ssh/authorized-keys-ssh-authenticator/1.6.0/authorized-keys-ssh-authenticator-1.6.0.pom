<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.dynamodan.ssh</groupId>
  <artifactId>authorized-keys-ssh-authenticator</artifactId>
  <version>1.6.0</version>
  <developers>
	<developer>
	  <name>Dan Hartman</name>
	  <email>info@dynamodan.com</email>
	  <organization>dynamodan.com</organization>
	  <organizationUrl>https://github.com/dynamodan</organizationUrl>
	</developer>
  </developers>
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sshd</groupId>
      <artifactId>sshd-core</artifactId>
      <version>1.6.0</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-simple</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>1.7.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>16.0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>2.0.2</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
	<properties>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
	</properties>
	<distributionManagement>
      <repository>
          <id>internal.repo</id>
          <name>Temporary Staging Repository</name>
          <url>file://${project.build.directory}/mvn-repo</url>
      </repository>
  </distributionManagement>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
        	<plugin>
        	    <groupId>com.github.github</groupId>
        	    <artifactId>site-maven-plugin</artifactId>
        	    <version>0.10</version>
        	    <configuration>
        	        <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
        	        <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
        	        <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
        	        <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
        	        <includes><include>**/*</include></includes>
        	        <repositoryName>jvm-ssh-groovy-shell</repositoryName>      <!-- github repo name -->
        	        <repositoryOwner>dynamodan</repositoryOwner>    <!-- github username  -->
        	    </configuration>
        	    <executions>
        	      <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
        	      <execution>
        	        <goals>
        	          <goal>site</goal>
        	        </goals>
        	        <phase>deploy</phase>
        	      </execution>
        	    </executions>
        	</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
